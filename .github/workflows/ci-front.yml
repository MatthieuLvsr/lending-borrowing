name: CI - Frontend

on:
  pull_request:
  push:
    branches: [main, dev]
    paths:
      - "front/**"
      - ".github/workflows/ci-front.yml"

# Required permissions for Biome CI to write PR comments
permissions:
  contents: read
  pull-requests: write
  checks: write

defaults:
  run:
    working-directory: ./front

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            front/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('front/bun.lockb', 'front/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run Biome CI check
        run: bunx --bun @biomejs/biome ci ./src --reporter=github

      - name: Run Next.js lint
        run: bun run lint

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            front/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('front/bun.lockb', 'front/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            front/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('front/bun.lockb') }}-${{ hashFiles('front/**/*.js', 'front/**/*.jsx', 'front/**/*.ts', 'front/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('front/bun.lockb') }}-

      - name: Build application
        run: bun run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: front/.next
          retention-days: 1

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            front/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('front/bun.lockb', 'front/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run TypeScript type check
        run: bunx tsc --noEmit --incremental false

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Run security audit
        run: bun audit
        continue-on-error: true

      - name: Check for known vulnerabilities
        uses: actions/dependency-review-action@v4
        if: github.event_name == 'pull_request'
        with:
          base-ref: ${{ github.event.pull_request.base.sha }}
          head-ref: ${{ github.event.pull_request.head.sha }}

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            front/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('front/bun.lockb', 'front/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: front/.next

      - name: Analyze bundle size
        run: |
          echo "üìä Bundle Analysis Results:"
          if [ -d "front/.next" ]; then
            du -sh front/.next/static/chunks/* | head -10
            echo "‚úÖ Build artifacts analyzed"
          else
            echo "‚ö†Ô∏è Build directory not found"
          fi

  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            front/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('front/bun.lockb', 'front/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: front/.next

      - name: Start Next.js server
        run: |
          bun run start &
          sleep 10
        env:
          NODE_ENV: production

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: ./front/lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint-and-format, build, type-check, security-audit]
    if: always()

    steps:
      - name: Check job results
        run: |
          echo "Lint & Format: ${{ needs.lint-and-format.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Type Check: ${{ needs.type-check.result }}"
          echo "Security Audit: ${{ needs.security-audit.result }}"

          if [[ "${{ needs.lint-and-format.result }}" == "failure" || "${{ needs.build.result }}" == "failure" || "${{ needs.type-check.result }}" == "failure" ]]; then
            echo "‚ùå CI pipeline failed"
            exit 1
          else
            echo "‚úÖ CI pipeline passed"
          fi
